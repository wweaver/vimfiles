snippet vd
	var_dump(${1:$this->data});
snippet php
	<?php
	${1}
	?>
snippet ec
	echo "${1:string}"${2};
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_ GET['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 */
# Class - post doc
snippet doc Class
	/**
	 * ${1:undocumented class}
	 *
	 * @author ${2:`g:snips_author`}
	 * @since ${3:`strftime('%Y-%m-%d')`}
	 */
# Class Variable - post doc
snippet doc Variable
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 */
# Class Variable
snippet var
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 */
	${1:var} $${2};${5}
# Class
snippet class
	/**
	 * ${3:undocumented class}
	 *
	 * @author ${4:`g:snips_author`}
	 * @since ${5:`strftime('%Y-%M-%D')`}
	 */
	${1:}class ${2:}
	{
		public function ${6:__construct}(${7})
		{
			${8}
		}
	}
# Constant Definition - post doc
snippet doc Constant
	/**
	 * ${1:undocumented constant}
	 */${2}
# Function - post doc
snippet doc Function
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 */${4}
# Header
snippet doc Header
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @copyright ${3:$2}, `strftime('%d %B, %Y')`
	 */
# Interface
snippet doc Interface
	/**
	 * ${2:undocumented class}
	 *
	 * @author ${3:`g:snips_author`}
	 */
	interface ${1:}
	{
		${5}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet func
	${1:public }function ${2:functionName}(${3})
	{
		${4}
	}
snippet function
	${1:public }function ${2:functionName}(${3})
	{
		${4}
	}
snippet fun
	${1:public }function ${2:functionName}(${3})
	{
		${4}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet debug
	file_put_contents('php://stderr', print_r(${1}, true));
snippet pa
	print_r($${1}, true);
snippet pre
	print '<pre>' . print_r($${1}, true) . '</pre>';
snippet test
	public function test${1}()
	{
		${2}
	}
snippet setUp
	public function setUp()
	{
		parent::setUp();

		${1}
	}
snippet tearDown
	public function tearDown()
	{
		${1}

		parent::tearDown();
	}
